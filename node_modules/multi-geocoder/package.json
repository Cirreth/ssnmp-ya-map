{
  "name": "multi-geocoder",
  "version": "0.1.4",
  "description": "NodeJS module for geocoding of address list",
  "main": "index.js",
  "directories": {
    "example": "examples",
    "test": "test"
  },
  "dependencies": {
    "handy-http": "^1.0.2",
    "lodash": "^3.10.0",
    "lru-cache": "~2.6.5",
    "inherit": "^2.2.2",
    "jspath": "^0.3.1",
    "vow": "^0.4.10",
    "vow-queue": "^0.4.2"
  },
  "repository": {
    "type": "git",
    "url": "ssh://github.com/dimik/node-multi-geocoder.git"
  },
  "keywords": [
    "geocoding",
    "geocoder",
    "yandex",
    "google"
  ],
  "author": {
    "name": "Dmitry Poklonskiy"
  },
  "license": "MIT",
  "devDependencies": {
    "mocha": "^1.21.4",
    "should": "^4.0.4"
  },
  "readme": "node-multi-geocoder\n===================\nNodeJS module for geocoding of address list.\n\nGetting Started\n---------------\nYou can install this module using Node Package Manager (npm):\n\n    npm install multi-geocoder\n\nUsage\n-----\nThe \"geocode\" method accepts address array and returns [Promises/A+](http://promisesaplus.com/) instance that will be fulfilled with object that has \"result\" field â€“ [GeoJSON FeaturesCollection](http://geojson.org/geojson-spec.html#feature-collection-objects).\nAnd \"errors\" field contains the array of requests could not be geocoded.\nYou can choose geocode provider or coordinates order with the appropriate option.\nThe following providers are available: \"yandex-cache\" (default), \"yandex\", \"google\".\n\n```js\nvar MultiGeocoder = require('multi-geocoder'),\n    geocoder = new MultiGeocoder({ provider: 'yandex-cache', coordorder: 'latlong' });\n\ngeocoder.geocode(['Moscow', 'New York', 'Paris', 'London'])\n    .then(function (res) {\n        console.log(res);\n    });\n```\n\nIf you have an array of objects with \"address\" property\nor addresses on a deeper level\nyou should overlap the \"getText\" method of geocode provider as follows:\n\n```js\nvar MultiGeocoder = require('multi-geocoder'),\n    geocoder = new MultiGeocoder({ provider: 'yandex', coordorder: 'latlong' }),\n    provider = geocoder.getProvider();\n\nprovider.getText = function (point) {\n    return point.address;\n};\n\ngeocoder.geocode([{ address: 'Moscow' }, { address: 'New York' }, { address: 'Paris' }, { address: 'London' }])\n    .then(function (res) {\n        console.log(res);\n    });\n```\n",
  "readmeFilename": "README.md",
  "_id": "multi-geocoder@0.1.4",
  "_shasum": "ac1fd746ccde316fa3d2251f08756892aa95fc4e",
  "_from": "multi-geocoder@",
  "_resolved": "https://registry.npmjs.org/multi-geocoder/-/multi-geocoder-0.1.4.tgz"
}
